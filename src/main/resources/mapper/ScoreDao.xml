<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.demo.dao.ScoreDao">

    <resultMap type="com.example.demo.entity.Score" id="ScoreMap">
        <result property="scoreId" column="score_id" jdbcType="INTEGER"/>
        <result property="studentId" column="student_id" jdbcType="INTEGER"/>
        <result property="unitId" column="unit_id" jdbcType="INTEGER"/>
        <result property="score" column="score" jdbcType="INTEGER"/>
    </resultMap>

    <!--查询单个-->
    <select id="queryById" resultMap="ScoreMap">
        select
          score_id, student_id, unit_id, score
        from score
        where score_id = #{scoreId}
    </select>

    <!--查询指定行数据-->
    <select id="queryAllByLimit" resultMap="ScoreMap">
        select
          score_id, student_id, unit_id, score
        from score
        <where>
            <if test="scoreId != null">
                and score_id = #{scoreId}
            </if>
            <if test="studentId != null">
                and student_id = #{studentId}
            </if>
            <if test="unitId != null">
                and unit_id = #{unitId}
            </if>
            <if test="score != null">
                and score = #{score}
            </if>
        </where>
        limit #{pageable.offset}, #{pageable.pageSize}
    </select>

    <!--统计总行数-->
    <select id="count" resultType="java.lang.Long">
        select count(1)
        from score
        <where>
            <if test="scoreId != null">
                and score_id = #{scoreId}
            </if>
            <if test="studentId != null">
                and student_id = #{studentId}
            </if>
            <if test="unitId != null">
                and unit_id = #{unitId}
            </if>
            <if test="score != null">
                and score = #{score}
            </if>
        </where>
    </select>

    <!--新增所有列-->
    <insert id="insert" keyProperty="scoreId" useGeneratedKeys="true">
        insert into score(student_id, unit_id, score)
        values (#{studentId}, #{unitId}, #{score})
    </insert>

    <insert id="insertBatch" keyProperty="scoreId" useGeneratedKeys="true">
        insert into score(student_id, unit_id, score)
        values
        <foreach collection="entities" item="entity" separator=",">
        (#{entity.studentId}, #{entity.unitId}, #{entity.score})
        </foreach>
    </insert>

    <insert id="insertOrUpdateBatch" keyProperty="scoreId" useGeneratedKeys="true">
        insert into score(student_id, unit_id, score)
        values
        <foreach collection="entities" item="entity" separator=",">
            (#{entity.studentId}, #{entity.unitId}, #{entity.score})
        </foreach>
        on duplicate key update
        student_id = values(student_id),
        unit_id = values(unit_id),
        score = values(score)
    </insert>

    <!--通过主键修改数据-->
    <update id="update">
        update score
        <set>
            <if test="studentId != null">
                student_id = #{studentId},
            </if>
            <if test="unitId != null">
                unit_id = #{unitId},
            </if>
            <if test="score != null">
                score = #{score},
            </if>
        </set>
        where score_id = #{scoreId}
    </update>

    <!--通过主键删除-->
    <delete id="deleteById">
        delete from score where score_id = #{scoreId}
    </delete>

</mapper>

